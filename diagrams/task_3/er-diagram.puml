@startuml

title ER диаграмма

entity User {
    * id : UUID
    --
    name : String
    email : String
    password : String
    created_at : DateTime
    updated_at : DateTime
}

entity House {
    * id : UUID
    --
    user_id: UUID
    name: String
    location: String
    serial_number: String
    created_at : DateTime
    updated_at : DateTime
}

entity Device {
    * id : UUID
    --
    name: String
    status: String  // (включено/выключено)
    house_id: UUID
    type_id: UUID
    serial_number: String
    firmware_version: String
    created_at : DateTime
    updated_at : DateTime
}

entity DeviceType {
    * id : UUID
    --
    name: String
    category: String
    description: String
    created_at : DateTime
    updated_at : DateTime
}

entity Module {
    * id : UUID
    --
    device_id: UUID
    version: String
    name: String // Wi-Fi модуль, Датчик температуры, Экран.
    type: String
    status: String // (активен/неактивен)
    created_at : DateTime
    updated_at : DateTime
}

entity TelemetryData {
    * id : UUID
    --
    device_id: UUID
    timestamp: DateTime
    temperature: Float
    humidity: Float
    voltage: Float
    status: String
    created_at : DateTime
}

entity UserHouse {
    * id : UUID
    --
    user_id: UUID
    house_id: UUID
    role: Enum // (владелец, гость, администратор)
    created_at : DateTime
    updated_at : DateTime
}

entity Alert {
    * id : UUID
    --
    device_id: UUID
    timestamp: DateTime
    type: Enum // (предупреждение, ошибка)
    message: String
    resolved: Boolean
    created_at : DateTime
    updated_at : DateTime
}

User ||--o{ UserHouse : "имеет доступ к"
UserHouse }o--|| House : "связан с"

House ||--o{ Device : "содержит"
Device ||--|| DeviceType : "относится к"
Device ||--o{ Module : "содержит"
Device ||--o{ TelemetryData : "генерирует данные"
Device ||--o{ Alert : "порождает предупреждения"

@enduml