openapi: 3.0.0
info:
  title: "Device Management API"
  version: "1.0.0"
  description: "API для управления оборудованием, включая асинхронную отправку данных о температуре через Kafka"
paths:
  /api/devices/{id}:
    get:
      summary: "Получить оборудование по id"
      description: "Получает информацию об оборудовании по его идентификатору."
      parameters:
        - name: id
          in: path
          description: "Идентификатор оборудования"
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: "Оборудование успешно получено"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceDto"
              examples:
                deviceExample:
                  summary: "Пример оборудования"
                  value:
                    id: 1
                    name: "Умное устройство"
                    status: "active"
                    currentTemperature: 22.5
        "404":
          description: "Оборудование не найдено"
        "500":
          description: "Ошибка сервера"
    put:
      summary: "Обновить оборудование"
      description: "Обновляет данные об оборудовании, например, его имя или статус."
      parameters:
        - name: id
          in: path
          description: "Идентификатор оборудования"
          required: true
          schema:
            type: integer
      requestBody:
        description: "Новые данные оборудования"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeviceDto"
            examples:
              updateDeviceExample:
                summary: "Пример обновления оборудования"
                value:
                  name: "Новое имя устройства"
                  status: "inactive"
      responses:
        "200":
          description: "Оборудование успешно обновлено"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceDto"
              examples:
                updatedDevice:
                  summary: "Пример обновлённого оборудования"
                  value:
                    id: 1
                    name: "Новое имя устройства"
                    status: "inactive"
                    currentTemperature: 22.5
        "400":
          description: "Некорректный запрос"
        "404":
          description: "Оборудование не найдено"
        "500":
          description: "Ошибка сервера"
  /api/devices/{id}/turn-on:
    post:
      summary: "Включить оборудование"
      description: "Отправляет команду на включение оборудования."
      parameters:
        - name: id
          in: path
          description: "Идентификатор оборудования"
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: "Оборудование успешно включено"
        "404":
          description: "Оборудование не найдено"
        "500":
          description: "Ошибка сервера"
  /api/devices/{id}/turn-off:
    post:
      summary: "Выключить оборудование"
      description: "Отправляет команду на выключение оборудования."
      parameters:
        - name: id
          in: path
          description: "Идентификатор оборудования"
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: "Оборудование успешно выключено"
        "404":
          description: "Оборудование не найдено"
        "500":
          description: "Ошибка сервера"
  /api/devices/{id}/set-temperature:
    post:
      summary: "Установить температуру для оборудования"
      description: "Устанавливает целевую температуру для оборудования и асинхронно отправляет сообщение через Kafka."
      parameters:
        - name: id
          in: path
          description: "Идентификатор оборудования"
          required: true
          schema:
            type: integer
        - name: temperature
          in: query
          description: "Целевая температура"
          required: true
          schema:
            type: number
            format: float
      responses:
        "204":
          description: "Целевая температура установлена, сообщение отправлено"
        "400":
          description: "Некорректный запрос"
        "404":
          description: "Оборудование не найдено"
        "500":
          description: "Ошибка сервера"
components:
  schemas:
    DeviceDto:
      type: object
      properties:
        id:
          type: integer
          description: "Идентификатор оборудования"
        name:
          type: string
          description: "Наименование оборудования"
        status:
          type: string
          description: "Статус оборудования (например, active, inactive)"
        currentTemperature:
          type: number
          format: float
          description: "Текущая температура (если применимо)"
      required:
        - id
        - name
        - status
